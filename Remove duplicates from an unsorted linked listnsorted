class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def removeDuplicatesUnsorted(head):
    if not head:
        return None

    seen = set()  # HashSet to store seen values
    current = head
    seen.add(current.val)

    while current.next:
        if current.next.val in seen:
            current.next = current.next.next  # Remove duplicate node
        else:
            seen.add(current.next.val)
            current = current.next  # Move to the next node

    return head

# Helper function to print the linked list
def printList(head):
    while head:
        print(head.val, end=" -> " if head.next else "")
        head = head.next
    print()

# Example Usage:
head = ListNode(5, ListNode(2, ListNode(2, ListNode(4))))
head = removeDuplicatesUnsorted(head)
printList(head)  # Output: 5 -> 2 -> 4

head2 = ListNode(2, ListNode(2, ListNode(2, ListNode(2, ListNode(2)))))
head2 = removeDuplicatesUnsorted(head2)
printList(head2)  # Output: 2
